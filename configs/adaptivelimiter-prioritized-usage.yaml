# Demonstrates a Failsafe-go prioritized adaptive limiter with multiple users and usage based prioritization, using workloads that can be adjusted via the REST API

client:
  prioritize: true
  track_usage: true
  share_strategies: true # Use a single adaptive limiter across both workloads

  workloads:
    - name: noisy
      rps: 150
      user: noisy
      priority: 2
      service_times:
        - service_time: 100ms

    - name: medium
      rps: 50
      user: medium
      priority: 2
      service_times:
        - service_time: 100ms

    - name: quiet
      rps: 10
      user: quiet
      priority: 2
      service_times:
        - service_time: 100ms

server:
  threads: 12

strategies:
  - name: adaptivelimiter
    client_policies:
      - adaptivelimiter:
          min_limit: 2
          max_limit: 150
          initial_limit: 50
          max_limit_factor: 5
          recent_window_min_duration: 1s
          recent_window_max_duration: 1s
          recent_window_min_samples: 10
          baseline_window_age: 60
          correlation_window_size: 50
          initial_rejection_factor: 6
          max_rejection_factor: 10
